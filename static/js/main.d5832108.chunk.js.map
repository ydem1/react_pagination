{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","items","countItemsPage","currentPage","setCurrentPage","countPage","Math","ceil","length","className","cn","disabled","href","onClick","Array","map","_","i","active","item","index","from","to","numbers","n","push","getNumbers","App","useState","countVisibleItems","setCountVisibleItems","activePage","setActivePage","itemsStart","itemsFinish","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2NAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,YACAC,EACI,EADJA,eAEMC,EAAYC,KAAKC,KAAKN,EAAMO,OAASN,GAE3C,OACE,qCACE,qBAAIO,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YACZ,CAAEC,SAA0B,IAAhBR,IAFhB,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAAS,WAGPT,EAFgBD,EAAc,GAAK,EAAI,EAAIA,EAAc,IAN7D,oBAeA,YAAIW,MAAMT,IAAYU,KAAI,SAACC,EAAGC,GAAJ,OACxB,oBACER,UAAWC,IAAG,YACZ,CAAEQ,OAAQD,EAAI,IAAMd,IAFxB,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAMK,EAAI,GACdJ,QAAS,kBAAMT,EAAea,EAAI,IAJpC,SAMGA,EAAI,KAXT,WAGWA,EAAI,OAanB,oBACER,UAAWC,IAAG,YACZ,CAAEC,SAAUR,IAAgBE,IAFhC,SAIE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QAAS,WAKPT,EAJgBD,EAAc,GAAKE,EAC/BA,EACAF,EAAc,IARtB,uBAkBJ,6BAEIF,EAAMc,KAAI,SAACI,EAAMC,GAAP,OACNjB,EAAc,GAAKD,EAAiBkB,EAAQ,GACzCjB,EAAcD,GAAkBkB,EAAQ,GAC3C,oBACE,UAAQ,OADV,SAIGD,GAFIA,YC7EflB,ECTC,SAAoBoB,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDEKG,CAHY,EACD,IAGtBX,KAAI,SAAAS,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAkDC,mBAAS,GAA3D,mBAAOC,EAAP,KAA0BC,EAA1B,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAAaJ,EAAoBE,EAAaF,EAV5B,EAalBK,EAAcL,EAAoBE,EAZjB,MAcnBF,EAAoBE,EAExB,OACE,sBAAKtB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBAEYsB,EAFZ,mBAEiCE,EAFjC,cAEiDC,EAFjD,eApBmB,GAoBnB,OAMA,sBAAKzB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,MAAOP,EACPQ,SAAU,SAAAC,GACRR,GAAsBQ,EAAMC,OAAOH,OACnCJ,EAAc,IAPlB,UAUE,wBAAQI,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOA,EACPC,eAAgB2B,EAChB1B,YAAa4B,EACb3B,eAAgB4B,GACX/B,EAAMO,YE3DnBiC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d5832108.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  items: string[];\n  countItemsPage: number;\n  currentPage: number;\n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>\n}\n\nexport const Pagination: React.FC<Props> = ({\n  items,\n  countItemsPage,\n  currentPage,\n  setCurrentPage,\n}) => {\n  const countPage = Math.ceil(items.length / countItemsPage);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={cn('page-item',\n            { disabled: currentPage === 1 })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => {\n              const newPage = currentPage - 1 <= 0 ? 1 : currentPage - 1;\n\n              setCurrentPage(newPage);\n            }}\n          >\n            «\n          </a>\n        </li>\n        {\n          [...Array(countPage)].map((_, i) => (\n            <li\n              className={cn('page-item',\n                { active: i + 1 === currentPage })}\n              key={`#${i + 1}`}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${i + 1}`}\n                onClick={() => setCurrentPage(i + 1)}\n              >\n                {i + 1}\n              </a>\n            </li>\n          ))\n        }\n        <li\n          className={cn('page-item',\n            { disabled: currentPage === countPage })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === countPage}\n            onClick={() => {\n              const newPage = currentPage + 1 >= countPage\n                ? countPage\n                : currentPage + 1;\n\n              setCurrentPage(newPage);\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {\n          items.map((item, index) => (\n            ((currentPage - 1) * countItemsPage < index + 1\n              && currentPage * countItemsPage >= index + 1) && (\n              <li\n                data-cy=\"item\"\n                key={item}\n              >\n                {item}\n              </li>\n            )\n          ))\n        }\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst FIRST_ITEM_NUMBER = 1;\nconst LAST_ITEM_NUMBER = 42;\n\nconst items = getNumbers(FIRST_ITEM_NUMBER, LAST_ITEM_NUMBER)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [countVisibleItems, setCountVisibleItems] = useState(5);\n  const [activePage, setActivePage] = useState(1);\n\n  const itemsStart = countVisibleItems * activePage - countVisibleItems\n    + FIRST_ITEM_NUMBER;\n\n  const itemsFinish = countVisibleItems * activePage > LAST_ITEM_NUMBER\n    ? LAST_ITEM_NUMBER\n    : countVisibleItems * activePage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {\n          `Page ${activePage} (items ${itemsStart} - ${itemsFinish} of ${LAST_ITEM_NUMBER})`\n        }\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={countVisibleItems}\n            onChange={event => {\n              setCountVisibleItems(+event.target.value);\n              setActivePage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        items={items}\n        countItemsPage={countVisibleItems}\n        currentPage={activePage}\n        setCurrentPage={setActivePage}\n        key={items.length}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}